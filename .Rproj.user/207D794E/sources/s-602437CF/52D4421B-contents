rm(list = ls())
data(MEPS2001)
attach(MEPS2001)
selectEq <- dambexp ~ age + female + educ + blhisp + totchr + ins + income
outcomeEq <- lnambx ~ age + female + educ + blhisp + totchr + ins
outcomeS <- cbind(age,female,totchr,ins)
outcomeC <- 1
#ge <- HeckmanGe(selectEq, outcomeEq,outcomeS, outcomeC, data = MEPS2001)
#summary(ge)
#ge$coefficients

YS <- model.response(model.frame(dambexp ~ age + female + educ + blhisp + totchr + ins + income))
YSLevels <- levels(as.factor(YS))
YO <- model.response(model.frame(lnambx ~ age + female + educ + blhisp + totchr + ins))
XS <- cbind(age, female, educ, blhisp, totchr, ins, income)
XS <- model.matrix(~XS)
XO <- cbind(age, female, educ, blhisp, totchr, ins)
XO <- model.matrix(~XO)
NXS <- ncol(XS)
NXO <- ncol(XO)
(start <- step2(YS, XS, YO, XO))
#################### Dispersion Matrix #
E <- outcomeS
# NE <- ncol(E)
if (length(E) == 1) {
  NE <- 1
  Msigma <- cbind(rep(1, nrow(XO)))
} else {
  NE <- dim(model.matrix(~E))[2] - 1
  Msigma <- E
}
################## Correlation Matrix #
V <- outcomeC
if (length(V) == 1) {
  NV <- 1
  Mrho <- cbind(rep(1, nrow(XO)))
} else {
  NV <- dim(model.matrix(~V))[2] - 1
  Mrho <- V
}

####################################
ilambda <- rep(1, NE)
ikappa <- rep(0, NV)
if (length(V) == 1 & length(E) == 1) {
  start <- c(start[(1:NXS)], start[((NXS + 1):(NXS + NXO))], 
             start[(NXS + NXO +1)], start[(NXS + NXO + 2)])
  names(start) <- c(colnames(XS), colnames(XO), "sigma", colnames(E), "correlation")
} else {
  if (length(V) == 1 & length(E) != 1) {
    start <- c(start[(1:NXS)], start[((NXS + 1):(NXS + NXO))], 
               start[(NXS +NXO + 1)], ilambda, start[(NXS + NXO + 2)])
    names(start) <- c(colnames(XS), colnames(XO), "interceptS", colnames(E),
                      "correlation")
  } else {
    if (length(V) != 1 & length(E) == 1) {
      start <- c(start[(1:NXS)], start[((NXS + 1):(NXS + NXO))], start[(NXS +
                                                                          NXO + 1)], start[(NXS + NXO + 2)], ikappa)
      names(start) <- c(colnames(XS), colnames(XO), "sigma", "interceptC",
                        colnames(V))
    } else {
      start <- c(start[(1:NXS)], start[((NXS + 1):(NXS + NXO))], start[(NXS +
                                                                          NXO + 1)], ilambda, start[(NXS + NXO + 2)], ikappa)
      names(start) <- c(colnames(XS), colnames(XO), "interceptS", colnames(E),
                        "interceptC", colnames(V))
    }
  }
}


git init
git add .
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/fsbmat-ufv/ssmodels.git
git push -u origin main

logomeupac <- "C:\\Users\\Dell\\Downloads\\lupa.png"
hexSticker::sticker(subplot = logomeupac, package = "ssmodels", 
                    p_color = "#FFFFFF", #Texto do nome do pacote
                    h_fill = "#32a852", #Fundo do hexagono
                    h_color = "#8d948e", #Borda do hexagono
                    filename = "C:\\Users\\Dell\\Downloads\\logo.png")

usethis::use_news_md()
usethis::use_readme_rmd()
usethis::use_pkgdown()
pkgdown::build_site()
